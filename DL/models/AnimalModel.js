const mongoose = require("mongoose");
const generalDetails = require("./generalDetails");

const subTypeParrots = [
  "אלכסנדרין",
  "אמזונה",
  "אקלקטוס",
  "ארה",
  "בורקיס",
  "ג'רדין",
  "ז'אקו",
  "יונים",
  "כנרית",
  "לאונייטד",
  "לורי",
  "סנגל",
  "פיונוס",
  "פינקים",
  "פסיפיק",
  "פרסונטה",
  "פרקיטים אוסטרלים",
  "ציפורי אהבה",
  "קאיק",
  "קאקריקים",
  "קוואקר",
  "קוניורים",
  "קוקוטייל",
  "קקדו",
  "ראש שזיף",
  "רוזלה",
  "רופלס פארוט",
  "שלו",
  "תוכון",
  "אחר",
];
const subTypeFish = [
  "אנבסיים",
  "דגי חתול",
  "דגי מים מלוחים",
  "דגי מים קרים",
  "דגים טרופיים",
  "חריתיים",
  "משריצי חיים",
  "נאוויתים",
  "ציקלידים",
  "אחר",
];
const subTypeDogs = [
  "מעורב",
  "אלסקן מלאמוט",
  "אפנפינצ'ר",
  "אקיטה אינו",
  "אקיטה אמריקאי",
  "באסט",
  "בוביה דה פלאנדר",
  "בול טרייר ננסי",
  "בול מאסטיף",
  "בולדוג אמריקאי",
  "בולדוג אנגלי",
  "בולדוג צרפתי",
  "בוסטון טרייר",
  "בוסרון",
  "בוקסר",
  "בורדר קולי",
  "בורזוי",
  "ביגל",
  "בירדד קולי",
  "בישון  פריזה",
  "בישון בולונז",
  "בישון הוואנז",
  "בלדההאונד",
  "בקר אוסטרלי",
  "בריארד",
  "ברניז",
  "ג'ק ראסל טרייר",
  "גולדן רטריבר",
  "גורדון סטר",
  "גרייהאונד",
  "גריפון בריסלי",
  "דוברמן",
  "דוג דה בורדו",
  "דוגו קאנריו",
  "דלמטי",
  "דני ענק",
  "האסקי סיבירי",
  "הרים פירנאי",
  "הרים שוויצרי",
  "וויפט",
  "וולש קורגי",
  "וימרנר",
  "ויסלה",
  "טוי טרייר אנגלי",
  "טוי טרייר רוסי",
  "טוי רוסי",
  "טרייר",
  "טרייר אמריקאי קירח",
  "טרייר רוסי  שחור",
  "יורקשייר",
  "כנעני",
  "לאונברגר",
  "לאסה אפסו",
  "לברדור",
  "מיזורי",
  "מים פורטוגזי",
  "מלטז",
  "מסטינו נפוליטנו",
  "מסטיף טיבטי",
  "מרמנו",
  "ניופאונדלנד",
  "סאלוקי",
  "סאן ברנרד",
  "סטר אירי",
  "סטר אנגלי",
  "סיני מצויץ",
  "סמוייד",
  "ספרינגר ספנייל",
  "סקוטיש טרייר",
  "פאג",
  "פארסון ראסל טרייר",
  "פודל",
  "פוינטר",
  "פומרניין/פומרני",
  "פוקס טרייר",
  "פינצ'ר",
  "פפיון",
  "פקינז",
  "צ'יוואווה",
  "צאו צאו",
  "צאן אנגלי עתיק",
  "צין יפני",
  "קאנה קורסו",
  "קארן טרייר",
  "קבליר קינג צ'ארלס",
  "קוטון דה טולייר",
  "קולי",
  "אחר",
];
const subTypeCats = [
  "אביסיני",
  "אנגורה",
  "אקזוטי קצר שיער",
  "בובטייל קורילי",
  "בירמן",
  "בנגלי",
  "בריטי",
  "הימלאיה",
  "מיין קון",
  "מעורב",
  "סומלי",
  "סיאמי",
  "ספינקס",
  "סקוטי",
  "פרסי",
  "רגדול",
  "רוסי כחול",
  "אחר",
];
const subTypeReptiles = [
  "איגואנה",
  "אנדורס",
  "אנקונדה",
  "בואה",
  "בורמזי אלבינו",
  "בירית",
  "ג'אנגל",
  "דורנגו",
  "חרדון",
  "כרכן תירס",
  "מילק סנייק",
  "פיתון",
  "פיתון מתכדר",
  "קינג אורנג'",
  "קינג סנייק",
  "שממית",
  "אחר",
];
const subTypeRodents = [
  "אוגר",
  "אוגר אנגורה",
  "אוגר סיבירי",
  "ארנב \\ שפן",
  "ארנב אנגורה",
  "ארנב ננסי",
  "ארנב ראש אריה",
  "ארנב שמוט אוזניים",
  "גרביל",
  "דגו - צ'ינצ'ילה מידברית",
  "חולדה",
  "סנאי מעופף \\ שוגר",
  "עכבר",
  "צ'ינצ'ילה",
  "שרקן \\ קביה",
  "אחר",
];
const subTypeHorses = [
  "אנדלוסי",
  "אפלוסה",
  "הנובר",
  "וולש",
  "טורבדריד",
  "טנסי",
  "מיזורי פוקס",
  "סינגל פוט",
  "ערבי",
  "פוני",
  "פוני שאלטן",
  "פיינט",
  "פלמינו",
  "פריזן",
  "קווטר",
  "אחר",
];
const subTypeRoosters = [
  "בלאדי",
  "ברהמה",
  "הודו",
  "לגהורן",
  "מאראנס",
  "מנדרין",
  "סאסקס",
  "סרהמה",
  "פולני",
  "פלימות רוק",
  "פקין",
  "רוד איילנד",
  "אחר",
];
const subTypeFarmAnimals = ["כבשים", "עזים", "פרות", "אחר"];

const isValInArray = (arr, val) => arr.includes(val);

const AnimalSchema = new mongoose.Schema(
  {
    category:{type:String ,default:"בעלי חיים",immutable:true},
    type: {
      type: String,
      required: true,
      enum: [
        "תוכים",
        "דגים",
        "כלבים",
        "חתולים",
        "זוחלים",
        "מכרסמים",
        "סוסים",
        "תרנגולים",
        "חיות משק",
      ],
    },
    Subtype: {
      type: String,
      validate: {
        validator: function (val) {
          if (this.type === "תוכים") return isValInArray(subTypeParrots, val);
          if (this.type === "דגים") return isValInArray(subTypeFish, val);
          if (this.type === "כלבים") return isValInArray(subTypeDogs, val);
          if (this.type === "חתולים") return isValInArray(subTypeCats, val);
          if (this.type === "זוחלים") return isValInArray(subTypeReptiles, val);
          if (this.type === "מכרסמים") return isValInArray(subTypeRodents, val);
          if (this.type === "סוסים") return isValInArray(subTypeHorses, val);
          if (this.type === "תרנגולים")
            return isValInArray(subTypeRoosters, val);
          if (this.type === "חיות משק")
            return isValInArray(subTypeFarmAnimals, val);
          return false;
        },
        message: (props) => `${props.value} is not a valid subtype!`,
      },
    },
    age: { type: Number, required: true },
    genus: {
      type: String,
      required: true,
      enum: ["זכר", "נקבה"],
    },
    purpose: {
      type: String,
      required: true,
      enum: ["מכירה", "מסירה/אימוץ"],
    },
    ...generalDetails,
  },
  {
    timestamps: { createdAt: "created_at", updatedAt: "updated_at" },
  }
);

module.exports = new mongoose.model("animals", AnimalSchema);
